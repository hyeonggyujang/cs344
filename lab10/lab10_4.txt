a. A linear model is preferable to a deep NN model under 2 circumstances: first, it is preferred when there needs some fast prototyping of the model; second, it is preferred if the problem is solvable with a linear model.

b. Yes, the DNN ouput has higher accuracy value on the test set. (DNN 0.92; Linear 0.78) I had to adjust the number of hidden layer units from [10, 10] to [20, 20].

c. No, the accuracy decreased by adding embeddings layers.

d. "Entertainig" and "comedy". They might have similar embeddings because they might have been showing up in similar context, and therefore, they might be showing up in close proximity.

e. 

terms_embedding_column = tf.feature_column.embedding_column(terms_feature_column, dimension=2)
feature_columns = [ terms_embedding_column ]

my_optimizer = tf.train.AdamOptimizer(learning_rate=0.025)
my_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, 10.0)

classifier = tf.estimator.DNNClassifier(
  feature_columns=feature_columns,
  hidden_units=[20,20],
  optimizer=my_optimizer
)

Training Accyracy: 0.95228
Testing Accuracy: 0.87352